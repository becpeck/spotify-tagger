import { z, literal } from 'zod';
import { ImagesSchema, ExternalUrlsSchema, AvailableMarketsSchema, RestrictionsSchema, CopyrightsSchema, ExternalIdsSchema, PopularitySchema } from './spotifySchemas';

export const GetAlbumSchema = z.object({
    album_type: z.union([literal('album'), literal('single'), literal('compilation')]),
    total_tracks: z.number(),
    available_markets: AvailableMarketsSchema,
    external_urls: ExternalUrlsSchema,
    href: z.string().url(),
    id: z.string(),
    images: ImagesSchema,
    name: z.string(),
    release_date: z.string(), // TODO: See if date works as type with precision examples
    release_date_precision: z.union([literal('year'), literal('month'), literal('day')]),
    restrictions: RestrictionsSchema.optional(),
    type: literal('album'),
    uri: z.string(),
    copyrights: CopyrightsSchema.optional(),
    external_ids: ExternalIdsSchema.optional(),
    genres: z.array(z.string()).optional(),
    label: z.string().optional(),
    popularity: PopularitySchema.optional(),
    artists: z.array(z.object({
        external_urls: ExternalUrlsSchema,
        followers: z.object({
            href: z.string().nullable(),
            total: z.number(),
        }).optional(),
        genres: z.array(z.string()).optional(),
        href: z.string().url(),
        id: z.string(),
        images: ImagesSchema.optional(),
        name: z.string(),
        popularity: z.number().optional(),
        type: literal('artist'),
        uri: z.string(),
    })),
    tracks: z.object({
        href: z.string().url(),
        limit: z.number(),
        next: z.string().url().nullable(),
        offset: z.number(),
        previous: z.string().url().nullable(),
        total: z.number(),
        items: z.array(z.object({
            artists: z.array(z.object({
                external_urls: ExternalUrlsSchema,
                href: z.string().url(),
                id: z.string(),
                name: z.string(),
                type: literal('artist'),
                uri: z.string(),
            })),
            available_markets: AvailableMarketsSchema,
            disc_number: z.number(),
            duration_ms: z.number(),
            explicit: z.boolean(),
            external_urls: ExternalUrlsSchema,
            href: z.string().url(),
            id: z.string(),
            is_playable: z.boolean().optional(),
            linked_from: z.object({
                external_urls: ExternalUrlsSchema,
                href: z.string().url(),
                id: z.string(),
                type: literal('track'),
                uri: z.string(),
            }).optional(),
            restrictions: RestrictionsSchema.optional(),
            name: z.string(),
            preview_url: z.string().url(),
            track_number: z.number(),
            type: literal('track'),
            uri: z.string(),
            is_local: z.boolean(),
        })),
    }),
});

export type GetAlbumResponse = z.infer<typeof GetAlbumSchema>;
