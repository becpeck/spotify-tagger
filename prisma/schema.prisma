// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator kysely {
  provider    = "prisma-kysely"
  output      = "../src/db"
  readOnlyIds = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String
  access_token       String
  expires_at         Int
  token_type         String
  scope              String
  id_token           String?
  session_state      String?

  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt @default(now())

  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken  String    @unique
  userId        String
  expires       DateTime
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String     @id @default(dbgenerated("gen_random_uuid()"))
  spotifyId         String     @unique
  name              String
  email             String     @unique
  emailVerified     DateTime?
  /// @kyselyType({ url: string, height: number, width: number })
  images            Json[]
  followers         Int
  country           String
  /// @kyselyType("premium" | "free" | "open")
  product           String
  explicitFiltered  Boolean
  explicitLocked    Boolean
  accounts          Account[]
  sessions          Session[]

  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt @default(now())
}

// Not used, not expected to be used, NextAuth wants it for KyselyAuth adapter type checking
model VerificationToken {
  identifier  String
  token       String    @unique
  expires     DateTime 

  @@unique([identifier, token])
}